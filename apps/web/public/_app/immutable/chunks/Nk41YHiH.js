var f=Object.defineProperty;var g=(n,e,t)=>e in n?f(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var a=(n,e,t)=>g(n,typeof e!="symbol"?e+"":e,t);import{w}from"./DnZ37acp.js";class E{constructor(e){this.encryptionKey=e}validateKey(e){return e===this.encryptionKey}serializeData(e){return JSON.stringify(e)}deserializeData(e){return JSON.parse(e)}handleEncryptError(e,t){return console.error("Error encrypting data:",e),this.serializeData(t)}handleDecryptError(e,t){console.error("Error decrypting data:",e);try{return this.deserializeData(t)}catch(r){return console.error("Error parsing unencrypted data:",r),null}}}const m="ramo_libre_web_encryption_key_2025";class o extends E{constructor(){super(m)}encryptData(e){try{const t=this.serializeData(e);return btoa(unescape(encodeURIComponent(t+"::"+this.encryptionKey)))}catch(t){return this.handleEncryptError(t,e)}}decryptData(e){try{const t=decodeURIComponent(escape(atob(e))),[r,s]=t.split("::");if(!this.validateKey(s))throw new Error("Invalid encryption key");return this.deserializeData(r)}catch(t){return this.handleDecryptError(t,e)}}}new o;function d(n,e,t=!1){const r=new o;if(typeof window>"u")return e;const s=localStorage.getItem(n);return s?t?r.decryptData(s):JSON.parse(s):e}const i=class i{constructor(e,t,r=!1){a(this,"store");a(this,"storageKey");a(this,"defaultValue");a(this,"encrypted",!1);a(this,"encryptor",null);i.initializedInstances.set(e,!1),this.storageKey=e,this.defaultValue=t,this.store=w(d(e,t,r)),this.encrypted=r,r&&(this.encryptor=new o),i.initializedInstances.set(e,!0)}static allInitialized(){return Array.from(i.initializedInstances.values()).every(e=>e)}subscribe(e){return this.store.subscribe(e)}reset(){typeof window<"u"&&localStorage.removeItem(this.storageKey),this.store.set(this.defaultValue)}set(e){if(typeof window<"u"){let t=this.encrypted&&this.encryptor?this.encryptor.encryptData(e):JSON.stringify(e);localStorage.setItem(this.storageKey,t)}this.store.set(e)}update(e){const t=d(this.storageKey,this.defaultValue,this.encrypted),r=e(t);this.set(r)}getStorageKey(){return this.storageKey}getDefaultValue(){return this.defaultValue}by(e,t,r,s){if(!Array.isArray(t))throw new Error("Current store value is not an array");const c=new Map;return e.forEach(p=>{const l=p[r],y=t.filter(h=>h[s]===l);y.length>0&&c.set(l,y)}),c}};a(i,"initializedInstances",new Map);let u=i;export{u as D};
